#include <string.h>
#include "my_lpc1114fn28.h"

/* Display Contol Macros */
#define SSD1306_CS_SET()	  	Chip_GPIO_SetPinState(LPC_GPIO, 0, 2, true);
#define SSD1306_CS_CLR()	  	Chip_GPIO_SetPinState(LPC_GPIO, 0, 2, false);
#define SSD1306_RES_SET()  	Chip_GPIO_SetPinState(LPC_GPIO, 1, 5, true);
#define SSD1306_RES_CLR()  	Chip_GPIO_SetPinState(LPC_GPIO, 1, 5, false);
#define SSD1306_DC_SET()	  	Chip_GPIO_SetPinState(LPC_GPIO, 1, 4, true);
#define SSD1306_DC_CLR()	  	Chip_GPIO_SetPinState(LPC_GPIO, 1, 4, false);

enum SSD1306_Commands {
// Fundamental Command
	SSD1306_COMMAND_SET_CONTRAST_CONTROL = 0x81,
	SSD1306_COMMAND_DISPLAY_ALL_ON_RESUME = 0xA4,
	SSD1306_COMMAND_SET_ENTIRE_DISPLAY_ON = 0xA5,
	SSD1306_COMMAND_SET_NORMAL_DISPLAY = 0xA6,
	SSD1306_COMMAND_SET_INVERT_DISPLAY = 0xA7,
	SSD1306_COMMAND_SET_DISPLAY_OFF = 0xAE,
	SSD1306_COMMAND_SET_DISPLAY_ON = 0xAF,
// Scrolling Command
	SSD1306_COMMAND_HORIZONTAL_SCROLL_RIGHT = 0x26,
	SSD1306_COMMAND_HORIZONTAL_SCROLL_LEFT = 0x27,
	SSD1306_COMMAND_VERTICAL_AND_RIGHT_HORIZONTAL_SCROLL = 0x29,
	SSD1306_COMMAND_VERTICAL_AND_LEFT_HORIZONTAL_SCROLL = 0x2A,
	SSD1306_COMMAND_DEACTIVATE_SCROLL= 0x2E,
	SSD1306_COMMAND_ACTIVATE_SCROLL = 0x2F,
	SSD1306_COMMAND_SET_VERTICAL_SCROLL_AREA = 0xA3,
// Addressing Setting Command
	// 10~1F : Set Higher Column Start Address for Page Addressing Mode
	SSD1306_COMMAND_SET_MEMORY_MODE = 0x20,
	SSD1306_COMMAND_SET_COLUMN_ADDR = 0x21,
	SSD1306_COMMAND_SET_PAGE_ADDR = 0x22,
	// B0~B7 : Set Page Start Address for Page Addressing Mode
// Hardware Configuration (Panel resolution & layout related) Command
	// 40~F7 : Set Display Start Line
	SSD1306_COMMAND_SET_START_LINE = 0x40,
	SSD1306_COMMAND_SET_SEG_REMAP0 = 0xA0,
	SSD1306_COMMAND_SET_SEG_REMAP1 = 0xA1,
	SSD1306_COMMAND_SET_MULTIPLEX_RATIO = 0xA8,
	SSD1306_COMMAND_SET_COM_OUTPUT_SCAN_DIRECTION_NORMAL = 0xC0,
	SSD1306_COMMAND_SET_COM_OUTPUT_SCAN_DIRECTION_REMAPPED = 0xC8,
	SSD1306_COMMAND_SET_DISPLAY_OFFSET = 0xD3,
	SSD1306_COMMAND_SET_COM_PINS_HARDWARE_CONFIGURATION = 0xDA,
// Timing & Driving Scheme Setting Command
	SSD1306_COMMAND_SET_DISPLAY_CLOCK_DIVIDE_RATIO = 0xD5,
	SSD1306_COMMAND_SET_PRECHARGE_PERIOD = 0xD9,
	SSD1306_COMMAND_SET_VCOMH_DESELECT_LEVEL = 0xDB,
	SSD1306_COMMAND_NOP = 0xE3,
// Advance Graphic Command
	SSD1306_COMMAND_SET_FADE_OUT_AND_BLINKING = 0x23,
	SSD1306_COMMAND_SET_ZOOM_IN = 0xD6,
// Charge Pump Command
	SSD1306_COMMAND_CHARGE_PUMP = 0x8D,
};

extern void OLED_Config_Request(void);
extern void SSD1306_Config_Request(void);
extern void SSD1306_SendCommand(uint8_t command);
extern void SSD1306_SendData(uint8_t date);
extern void OLED_ClearScreen (uint8_t state);
